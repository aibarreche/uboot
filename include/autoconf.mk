CONFIG_SYS_PL310_BASE="L2_PL310_BASE"
CONFIG_BOOTM_NETBSD=y
CONFIG_BOOTCOMMAND="mmc dev ${mmcdev};if mmc rescan; then if run loadbootscript; then run bootscript; else if run loadimage; then run mmcboot; else run netboot; fi; fi; else run netboot; fi"
CONFIG_MXC_USB_FLAGS=0
CONFIG_IMX_CONFIG="board/codemodules/pixiepro/pixieproqp.cfg"
CONFIG_SYS_FSL_ESDHC_ADDR=0
CONFIG_BOOTM_VXWORKS=y
CONFIG_SF_DEFAULT_MODE="SPI_MODE_0"
CONFIG_IS_MODULE(option)="config_enabled(CONFIG_VAL(option ##_MODULE))"
CONFIG_SYS_GENERIC_BOARD=y
CONFIG_SYS_LOAD_ADDR=$(CONFIG_LOADADDR)
CONFIG_SYS_FSL_MAX_NUM_OF_SEC=y
CONFIG_SYS_MEMTEST_SCRATCH=0x10800000
CONFIG_SYS_HELP_CMD_WIDTH=8
CONFIG_NR_DRAM_BANKS=y
CONFIG_BOOTM_RTEMS=y
CONFIG_SYS_CBSIZE=512
CONFIG_POWER_PFUZE100_I2C_ADDR=0x08
CONFIG_BOOTM_LINUX=y
CONFIG_BOARD_LATE_INIT=y
CONFIG_MII=y
CONFIG_REVISION_TAG=y
CONFIG_SYS_FSL_CLK=y
CONFIG_SYS_FSL_SEC_ADDR="(CAAM_BASE_ADDR + CONFIG_SYS_FSL_SEC_OFFSET)"
CONFIG_ENV_OFFSET="(896 * 1024)"
CONFIG_MXC_OCOTP=y
CONFIG_USB_MAX_CONTROLLER_COUNT=2
CONFIG_ENV_OVERWRITE=y
CONFIG_ENV_SIZE="(8 * 1024)"
CONFIG_SUPPORT_RAW_INITRD=y
CONFIG_SYS_L2_PL310=y
CONFIG_SYS_MALLOC_LEN="(10 * SZ_1M)"
CONFIG_SYS_MMC_ENV_DEV=0
CONFIG_SYS_I2C_SPEED=100000
CONFIG_SYS_BOOTM_LEN=0x1000000
CONFIG_SYS_DEF_EEPROM_ADDR=0
CONFIG_MXC_GPT_HCLK=y
CONFIG_MXC_UART=y
CONFIG_SYS_BARGSIZE=$(CONFIG_SYS_CBSIZE)
CONFIG_BOOTM_PLAN9=y
CONFIG_IS_BUILTIN(option)="config_enabled(CONFIG_VAL(option))"
CONFIG_MXC_USB_PORTSC="(PORT_PTS_UTMI | PORT_PTS_PTW)"
CONFIG_SYS_FSL_JR0_ADDR="(CAAM_BASE_ADDR + CONFIG_SYS_FSL_JR0_OFFSET)"
CONFIG_POWER_I2C=y
CONFIG_SF_DEFAULT_BUS=0
CONFIG_SYS_MAXARGS=32
CONFIG_SYS_PBSIZE="(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)"
CONFIG_FEC_XCV_TYPE="RGMII"
CONFIG_BOARDDIR="board/codemodules/pixiepro"
CONFIG_POWER=y
CONFIG_EHCI_HCD_INIT_AFTER_RESET=y
CONFIG_BOUNCE_BUFFER=y
CONFIG_SYS_MAX_FLASH_SECT=512
CONFIG_PHYLIB=y
CONFIG_BOARD_POSTCLK_INIT=y
CONFIG_SYS_MMC_MAX_BLK_COUNT=65535
CONFIG_ZLIB=y
CONFIG_LOADADDR=0x10008000
CONFIG_ETHPRIME="FEC"
CONFIG_MP=y
CONFIG_FSL_USDHC=y
CONFIG_SYS_FSL_SEC_OFFSET=0
CONFIG_GZIP=y
CONFIG_SYS_INIT_RAM_SIZE="IRAM_SIZE"
CONFIG_FEC_MXC_PHYADDR=y
CONFIG_SYS_BAUDRATE_TABLE="{ 9600, 19200, 38400, 57600, 115200 }"
CONFIG_VAL(option)="config_val(option)"
CONFIG_SUPPORT_EMMC_BOOT=y
CONFIG_SYS_SDRAM_BASE="PHYS_SDRAM"
CONFIG_IMAGE_FORMAT_LEGACY=y
CONFIG_SYS_BOOT_RAMDISK_HIGH=y
CONFIG_PHY_ATHEROS=y
CONFIG_SYS_PROMPT_HUSH_PS2="> "
CONFIG_SYS_FSL_USDHC_NUM=2
CONFIG_USB_ETHER_ASIX=y
CONFIG_SYS_INIT_SP_OFFSET="(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)"
CONFIG_MXC_SPI=y
CONFIG_SYS_I2C=y
CONFIG_SYS_INIT_RAM_ADDR="IRAM_BASE_ADDR"
CONFIG_EXTRA_ENV_SETTINGS="script=/boot/boot.scr0image=/boot/zImage0fdt_file=" CONFIG_DEFAULT_FDT_FILE "0fdt_addr=0x120000000boot_fdt=try0ip_dyn=yes0console=" CONSOLE_DEV "0fdt_high=0xffffffff0initrd_high=0xffffffff0vmalloc_size=200M0mmcdev=" __stringify(CONFIG_SYS_MMC_ENV_DEV) "0mmcpart=20mmcroot=" CONFIG_MMCROOT " rootwait rw0update_sd_firmware=if test ${ip_dyn} = yes; then setenv get_cmd dhcp; else setenv get_cmd tftp; fi; if mmc dev ${mmcdev}; then if ${get_cmd} ${update_sd_firmware_filename}; then setexpr fw_sz ${filesize} / 0x200; setexpr fw_sz ${fw_sz} + 1; mmc write ${loadaddr} 0x2 ${fw_sz}; fi; fi0" EMMC_ENV "mmcargs=setenv bootargs console=${console},${baudrate} root=${mmcroot} vmalloc=${vmalloc_size}0 loadbootscript=ext4load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${script};0bootscript=echo Running bootscript from mmc ...; source0loadimage=ext4load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${image}0loadfdt=ext4load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${fdt_file}0mmcboot=echo Booting from mmc ...; run mmcargs; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if run loadfdt; then bootz ${loadaddr} - ${fdt_addr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;0netargs=setenv bootargs console=${console},${baudrate} root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp0netboot=echo Booting from net ...; run netargs; if test ${ip_dyn} = yes; then setenv get_cmd dhcp; else setenv get_cmd tftp; fi; ${get_cmd} ${image}; if test ${boot_fdt} = yes || test ${boot_fdt} = try; then if ${get_cmd} ${fdt_addr} ${fdt_file}; then bootz ${loadaddr} - ${fdt_addr}; else if test ${boot_fdt} = try; then bootz; else echo WARN: Cannot load the DT; fi; fi; else bootz; fi;0"
CONFIG_SYS_INIT_SP_ADDR="(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)"
CONFIG_FSL_ESDHC=y
CONFIG_INITRD_TAG=y
CONFIG_POWER_PFUZE100=y
CONFIG_CMDLINE_TAG=y
CONFIG_MXC_UART_BASE="UART4_BASE"
CONFIG_USB_HOST_ETHER=y
CONFIG_FEC_MXC=y
CONFIG_USBD_HS=y
CONFIG_ARP_TIMEOUT="200UL"
CONFIG_MACH_TYPE=3529
CONFIG_SYS_MEMTEST_END=0x10010000
CONFIG_MX6QP=y
CONFIG_MMCROOT="/dev/mmcblk2p2"
CONFIG_SETUP_MEMORY_TAGS=y
CONFIG_SYS_MEMTEST_START=0x10000000
CONFIG_SF_DEFAULT_SPEED=20000000
CONFIG_CONS_INDEX=y
CONFIG_LMB=y
CONFIG_SYS_I2C_MXC=y
CONFIG_IS_ENABLED(option)="(config_enabled(CONFIG_VAL(option)) || config_enabled(CONFIG_VAL(option ##_MODULE)))"
CONFIG_SYS_I2C_MXC_I2C1=y
CONFIG_SYS_I2C_MXC_I2C2=y
CONFIG_SYS_I2C_MXC_I2C3=y
CONFIG_SYS_FSL_JR0_OFFSET=0x1000
CONFIG_SF_DEFAULT_CS=0
